#ifndef __TASK_UPDATE    // header files should include guards
#define __TASK_UPDATE

#include "cmsis_os.h"
#include "usart.h"
#include "queue.h"
#include "string.h"

#include "Customer.h"
#include "Teller.h"
#include "Break.h"

typedef struct {
	// Generated by FreeRTOS, saved for later use (task synchronization, etc.)
  TaskHandle_t handle; 
  char task_name[16];
	
	// A pointer to main's simulation clock. How many seconds has passed since 9am (program beginning). 
	uint32_t* SimulationClockPtr; 
	
	// A pointer to the queue of all customers in the queue
	QueueHandle_t* CustomerQueuePtr;
	
	// List of all tellers (3)
	Teller* TellerPtr;
} UPDATE_PARAMS_t;

extern UPDATE_PARAMS_t update_params; // defined here, allocated in led_task.c

void update_task(void *parameters);
void update_task_init(char *update_task_name, 
											uint32_t* simulation_clock_ptr, 
											QueueHandle_t* customer_queue_ptr, 
											Teller* teller_ptr
);

/*
	This function will update the current time in the main program,
		which can be accesed with SimulationClockPtr.
*/
void UpdateTime(void); 

/*
	This function will update the current display.
		Display will print current simulated time, the number
		of customers waiting (size of customerQueuePtr), and the
		status of each teller. 
*/
void UpdateDisplay(void);

#endif
